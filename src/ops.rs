use std::collections::HashMap;
use std::fmt;

use crate::utils::*;

#[derive(Debug, PartialEq, Eq, Copy, Clone)]
pub enum Operation {
    LD,
    ADD,
    ADC,
    SUB,
    SBC,
    AND,
    XOR,
    OR,
    CP,
    INC,
    DEC,
    DAA,
    CPL,
    ADD_16_BIT,
    INC_16_BIT,
    DEC_16_BIT,
    RLCA,
    RLA,
    RRCA,
    RRA,
    RLC,
    RL,
    RRC,
    RR,
    SLA,
    SWAP,
    SRA,
    SRL,
    BIT,
    SET,
    RES,
    CCF,
    SCF,
    NOP,
    HALT,
    STOP,
    DI,
    EI,
    JP,
    JR,
    CALL,
    RET,
    RETI,
    RST,
    POP,
    PUSH,
    PREFIX,
    LDH,
}

impl fmt::Display for Operation {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        write!(f, "{:?}", self)
    }
}

#[derive(Debug, Clone)]
pub struct OpCode {
    pub code: Byte,
    pub mnemonic: String,
    pub operation: Operation,
    pub len: u8,
    pub cycles: u8,
    pub alt_cycles: Option<u8>,
}

impl OpCode {
    fn new(code: Byte, mnemonic: String, operation: Operation, len: u8, cycles: u8, alt_cycles: Option<u8>) -> OpCode {
        OpCode {
            code: code,
            mnemonic: mnemonic,
            operation: operation,
            len: len,
            cycles: cycles,
            alt_cycles: alt_cycles
        }
    }
}

lazy_static! {
    pub static ref CPU_OP_CODES: Vec<OpCode> = vec![
        OpCode::new(0x00, String::from("NOP"), Operation::NOP, 1, 4, None),
        OpCode::new(0x01, String::from("LD BC, d16"), Operation::LD, 3, 12, None),
        OpCode::new(0x02, String::from("LD (BC), A"), Operation::LD, 1, 8, None),
        OpCode::new(0x03, String::from("INC BC"), Operation::INC_16_BIT, 1, 8, None),
        OpCode::new(0x04, String::from("INC B"), Operation::INC, 1, 4, None),
        OpCode::new(0x05, String::from("DEC B"), Operation::DEC, 1, 4, None),
        OpCode::new(0x06, String::from("LD B, d8"), Operation::LD, 2, 8, None),
        OpCode::new(0x07, String::from("RLCA"), Operation::RLCA, 1, 4, None),
        OpCode::new(0x08, String::from("LD (a16), SP"), Operation::LD, 3, 20, None),
        OpCode::new(0x09, String::from("ADD HL, BC"), Operation::ADD_16_BIT, 1, 8, None),
        OpCode::new(0x0A, String::from("LD A, (BC)"), Operation::LD, 1, 8, None),
        OpCode::new(0x0B, String::from("DEC, BC"), Operation::DEC_16_BIT, 1, 8, None),
        OpCode::new(0x0C, String::from("INC C"), Operation::INC, 1, 4, None),
        OpCode::new(0x0D, String::from("DEC C"), Operation::DEC, 1, 4, None),
        OpCode::new(0x0E, String::from("LD C, d8"), Operation::LD, 2, 8, None),
        OpCode::new(0x0F, String::from("RRCA"), Operation::RRCA, 1, 4, None),

        OpCode::new(0x10, String::from("STOP"), Operation::STOP, 2, 4, None),
        OpCode::new(0x11, String::from("LD DE, d16"), Operation::LD, 3, 12, None),
        OpCode::new(0x12, String::from("LD (DE), A"), Operation::LD, 1, 8, None),
        OpCode::new(0x13, String::from("INC DE"), Operation::INC_16_BIT, 1, 8, None),
        OpCode::new(0x14, String::from("INC D"), Operation::INC, 1, 4, None),
        OpCode::new(0x15, String::from("DEC D"), Operation::DEC, 1, 4, None),
        OpCode::new(0x16, String::from("LD D, d8"), Operation::LD, 2, 8, None),
        OpCode::new(0x17, String::from("RLA"), Operation::RLA, 1, 4, None),
        OpCode::new(0x18, String::from("JR r8"), Operation::JR, 2, 12, None),
        OpCode::new(0x19, String::from("ADD HL, DE"), Operation::ADD_16_BIT, 1, 8, None),
        OpCode::new(0x1A, String::from("LD A, (DE)"), Operation::LD, 1, 8, None),
        OpCode::new(0x1B, String::from("DEC DE"), Operation::DEC_16_BIT, 1, 8, None),
        OpCode::new(0x1C, String::from("INC E"), Operation::INC, 1, 4, None),
        OpCode::new(0x1D, String::from("DEC E"), Operation::DEC, 1, 4, None),
        OpCode::new(0x1E, String::from("LD E, d8"), Operation::LD, 2, 8, None),
        OpCode::new(0x1F, String::from("RRA"), Operation::RRA, 1, 4, None),

        OpCode::new(0x20, String::from("JR NZ, r8"), Operation::JR, 2, 12, Some(8)),
        OpCode::new(0x21, String::from("LD HL, d16"), Operation::LD, 3, 12, None),
        OpCode::new(0x22, String::from("LD (HL+), A"), Operation::LD, 1, 8, None),
        OpCode::new(0x23, String::from("INC HL"), Operation::INC_16_BIT, 1, 8, None),
        OpCode::new(0x24, String::from("INC H"), Operation::INC, 1, 4, None),
        OpCode::new(0x25, String::from("DEC H"), Operation::DEC, 1, 4, None),
        OpCode::new(0x26, String::from("LD H, d8"), Operation::LD, 2, 8, None),
        OpCode::new(0x27, String::from("DAA"), Operation::DAA, 1, 4, None),
        OpCode::new(0x28, String::from("JR Z, r8"), Operation::JR, 2, 12, Some(8)),
        OpCode::new(0x29, String::from("ADD HL, HL"), Operation::ADD_16_BIT, 1, 8, None),
        OpCode::new(0x2A, String::from("LD A, (HL+)"), Operation::LD, 1, 8, None),
        OpCode::new(0x2B, String::from("DEC HL"), Operation::DEC_16_BIT, 1, 8, None),
        OpCode::new(0x2C, String::from("INC L"), Operation::INC, 1, 4, None),
        OpCode::new(0x2D, String::from("DEC L"), Operation::DEC, 1, 4, None),
        OpCode::new(0x2E, String::from("LD L, d8"), Operation::LD, 2, 8, None),
        OpCode::new(0x2F, String::from("CPL"), Operation::CPL, 1, 4, None),

        OpCode::new(0x30, String::from("JR NC, r8"), Operation::JR, 2, 12, Some(8)),
        OpCode::new(0x31, String::from("LD SP, d16"), Operation::LD, 3, 12, None),
        OpCode::new(0x32, String::from("LD (HL-), A"), Operation::LD, 1, 8, None),
        OpCode::new(0x33, String::from("INC SP"), Operation::INC_16_BIT, 1, 8, None),
        OpCode::new(0x34, String::from("INC (HL)"), Operation::INC, 1, 12, None),
        OpCode::new(0x35, String::from("DEC (HL)"), Operation::DEC, 1, 12, None),
        OpCode::new(0x36, String::from("LD (HL), d8"), Operation::LD, 2, 12, None),
        OpCode::new(0x37, String::from("SCF"), Operation::SCF, 1, 4, None),
        OpCode::new(0x38, String::from("JR C, r8"), Operation::JR, 2, 12, Some(8)),
        OpCode::new(0x39, String::from("ADD HL, SP"), Operation::ADD_16_BIT, 1, 8, None),
        OpCode::new(0x3A, String::from("LD A, (HL-)"), Operation::LD, 1, 8, None),
        OpCode::new(0x3B, String::from("DEC SP"), Operation::DEC_16_BIT, 1, 8, None),
        OpCode::new(0x3C, String::from("INC A"), Operation::INC, 1, 4, None),
        OpCode::new(0x3D, String::from("DEC A"), Operation::DEC, 1, 4, None),
        OpCode::new(0x3E, String::from("LD A, d8"), Operation::LD, 2, 8, None),
        OpCode::new(0x3F, String::from("CCF"), Operation::CCF, 1, 4, None),

        OpCode::new(0x40, String::from("LD B, B"), Operation::LD, 1, 4, None),
        OpCode::new(0x41, String::from("LD B, C"), Operation::LD, 1, 4, None),
        OpCode::new(0x42, String::from("LD B, D"), Operation::LD, 1, 4, None),
        OpCode::new(0x43, String::from("LD B, E"), Operation::LD, 1, 4, None),
        OpCode::new(0x44, String::from("LD B, H"), Operation::LD, 1, 4, None),
        OpCode::new(0x45, String::from("LD B, L"), Operation::LD, 1, 4, None),
        OpCode::new(0x46, String::from("LD B, (HL)"), Operation::LD, 1, 8, None),
        OpCode::new(0x47, String::from("LD B, A"), Operation::LD, 1, 4, None),
        OpCode::new(0x48, String::from("LD C, B"), Operation::LD, 1, 4, None),
        OpCode::new(0x49, String::from("LD C, C"), Operation::LD, 1, 4, None),
        OpCode::new(0x4A, String::from("LD C, D"), Operation::LD, 1, 4, None),
        OpCode::new(0x4B, String::from("LD C, E"), Operation::LD, 1, 4, None),
        OpCode::new(0x4C, String::from("LD C, H"), Operation::LD, 1, 4, None),
        OpCode::new(0x4D, String::from("LD C, L"), Operation::LD, 1, 4, None),
        OpCode::new(0x4E, String::from("LD C, (HL)"), Operation::LD, 1, 8, None),
        OpCode::new(0x4F, String::from("LD C, A"), Operation::LD, 1, 4, None),

        OpCode::new(0x50, String::from("LD D, B"), Operation::LD, 1, 4, None),
        OpCode::new(0x51, String::from("LD D, C"), Operation::LD, 1, 4, None),
        OpCode::new(0x52, String::from("LD D, D"), Operation::LD, 1, 4, None),
        OpCode::new(0x53, String::from("LD D, E"), Operation::LD, 1, 4, None),
        OpCode::new(0x54, String::from("LD D, H"), Operation::LD, 1, 4, None),
        OpCode::new(0x55, String::from("LD D, L"), Operation::LD, 1, 4, None),
        OpCode::new(0x56, String::from("LD D, (HL)"), Operation::LD, 1, 8, None),
        OpCode::new(0x57, String::from("LD D, A"), Operation::LD, 1, 4, None),
        OpCode::new(0x58, String::from("LD E, B"), Operation::LD, 1, 4, None),
        OpCode::new(0x59, String::from("LD E, C"), Operation::LD, 1, 4, None),
        OpCode::new(0x5A, String::from("LD E, D"), Operation::LD, 1, 4, None),
        OpCode::new(0x5B, String::from("LD E, E"), Operation::LD, 1, 4, None),
        OpCode::new(0x5C, String::from("LD E, H"), Operation::LD, 1, 4, None),
        OpCode::new(0x5D, String::from("LD E, L"), Operation::LD, 1, 4, None),
        OpCode::new(0x5E, String::from("LD E, (HL)"), Operation::LD, 1, 8, None),
        OpCode::new(0x5F, String::from("LD E, A"), Operation::LD, 1, 4, None),

        OpCode::new(0x60, String::from("LD H, B"), Operation::LD, 1, 4, None),
        OpCode::new(0x61, String::from("LD H, C"), Operation::LD, 1, 4, None),
        OpCode::new(0x62, String::from("LD H, D"), Operation::LD, 1, 4, None),
        OpCode::new(0x63, String::from("LD H, E"), Operation::LD, 1, 4, None),
        OpCode::new(0x64, String::from("LD H, H"), Operation::LD, 1, 4, None),
        OpCode::new(0x65, String::from("LD H, L"), Operation::LD, 1, 4, None),
        OpCode::new(0x66, String::from("LD H, (HL)"), Operation::LD, 1, 8, None),
        OpCode::new(0x67, String::from("LD H, A"), Operation::LD, 1, 4, None),
        OpCode::new(0x68, String::from("LD L, B"), Operation::LD, 1, 4, None),
        OpCode::new(0x69, String::from("LD L, C"), Operation::LD, 1, 4, None),
        OpCode::new(0x6A, String::from("LD L, D"), Operation::LD, 1, 4, None),
        OpCode::new(0x6B, String::from("LD L, E"), Operation::LD, 1, 4, None),
        OpCode::new(0x6C, String::from("LD L, H"), Operation::LD, 1, 4, None),
        OpCode::new(0x6D, String::from("LD L, L"), Operation::LD, 1, 4, None),
        OpCode::new(0x6E, String::from("LD L, (HL)"), Operation::LD, 1, 8, None),
        OpCode::new(0x6F, String::from("LD L, A"), Operation::LD, 1, 4, None),

        OpCode::new(0x70, String::from("LD (HL), B"), Operation::LD, 1, 8, None),
        OpCode::new(0x71, String::from("LD (HL), C"), Operation::LD, 1, 8, None),
        OpCode::new(0x72, String::from("LD (HL), D"), Operation::LD, 1, 8, None),
        OpCode::new(0x73, String::from("LD (HL), E"), Operation::LD, 1, 8, None),
        OpCode::new(0x74, String::from("LD (HL), H"), Operation::LD, 1, 8, None),
        OpCode::new(0x75, String::from("LD (HL), L"), Operation::LD, 1, 8, None),
        OpCode::new(0x76, String::from("HALT"), Operation::HALT, 1, 0, None),
        OpCode::new(0x77, String::from("LD (HL), A"), Operation::LD, 1, 8, None),
        OpCode::new(0x78, String::from("LD A, B"), Operation::LD, 1, 4, None),
        OpCode::new(0x79, String::from("LD A, C"), Operation::LD, 1, 4, None),
        OpCode::new(0x7A, String::from("LD A, D"), Operation::LD, 1, 4, None),
        OpCode::new(0x7B, String::from("LD A, E"), Operation::LD, 1, 4, None),
        OpCode::new(0x7C, String::from("LD A, H"), Operation::LD, 1, 4, None),
        OpCode::new(0x7D, String::from("LD A, L"), Operation::LD, 1, 4, None),
        OpCode::new(0x7E, String::from("LD A, (HL)"), Operation::LD, 1, 8, None),
        OpCode::new(0x7F, String::from("LD A, A"), Operation::LD, 1, 4, None),

        OpCode::new(0x80, String::from("ADD A, B"), Operation::ADD, 1, 4, None),
        OpCode::new(0x81, String::from("ADD A, C"), Operation::ADD, 1, 4, None),
        OpCode::new(0x82, String::from("ADD A, D"), Operation::ADD, 1, 4, None),
        OpCode::new(0x83, String::from("ADD A, E"), Operation::ADD, 1, 4, None),
        OpCode::new(0x84, String::from("ADD A, H"), Operation::ADD, 1, 4, None),
        OpCode::new(0x85, String::from("ADD A, L"), Operation::ADD, 1, 4, None),
        OpCode::new(0x86, String::from("ADD A, (HL)"), Operation::ADD, 1, 8, None),
        OpCode::new(0x87, String::from("ADD A, A"), Operation::ADD, 1, 4, None),
        OpCode::new(0x88, String::from("ADC A, B"), Operation::ADC, 1, 4, None),
        OpCode::new(0x89, String::from("ADC A, C"), Operation::ADC, 1, 4, None),
        OpCode::new(0x8A, String::from("ADC A, D"), Operation::ADC, 1, 4, None),
        OpCode::new(0x8B, String::from("ADC A, E"), Operation::ADC, 1, 4, None),
        OpCode::new(0x8C, String::from("ADC A, H"), Operation::ADC, 1, 4, None),
        OpCode::new(0x8D, String::from("ADC A, L"), Operation::ADC, 1, 4, None),
        OpCode::new(0x8E, String::from("ADC A, (HL)"), Operation::ADC, 1, 8, None),
        OpCode::new(0x8F, String::from("ADC A, A"), Operation::ADC, 1, 4, None),

        OpCode::new(0x90, String::from("SUB B"), Operation::SUB, 1, 4, None),
        OpCode::new(0x91, String::from("SUB C"), Operation::SUB, 1, 4, None),
        OpCode::new(0x92, String::from("SUB D"), Operation::SUB, 1, 4, None),
        OpCode::new(0x93, String::from("SUB E"), Operation::SUB, 1, 4, None),
        OpCode::new(0x94, String::from("SUB H"), Operation::SUB, 1, 4, None),
        OpCode::new(0x95, String::from("SUB L"), Operation::SUB, 1, 4, None),
        OpCode::new(0x96, String::from("SUB (HL)"), Operation::SUB, 1, 8, None),
        OpCode::new(0x97, String::from("SUB A"), Operation::SUB, 1, 4, None),
        OpCode::new(0x98, String::from("SBC A, B"), Operation::SBC, 1, 4, None),
        OpCode::new(0x99, String::from("SBC A, C"), Operation::SBC, 1, 4, None),
        OpCode::new(0x9A, String::from("SBC A, D"), Operation::SBC, 1, 4, None),
        OpCode::new(0x9B, String::from("SBC A, E"), Operation::SBC, 1, 4, None),
        OpCode::new(0x9C, String::from("SBC A, H"), Operation::SBC, 1, 4, None),
        OpCode::new(0x9D, String::from("SBC A, L"), Operation::SBC, 1, 4, None),
        OpCode::new(0x9E, String::from("SBC A, (HL)"), Operation::SBC, 1, 8, None),
        OpCode::new(0x9F, String::from("SBC A, A"), Operation::SBC, 1, 4, None),

        OpCode::new(0xA0, String::from("AND B"), Operation::AND, 1, 4, None),
        OpCode::new(0xA1, String::from("AND C"), Operation::AND, 1, 4, None),
        OpCode::new(0xA2, String::from("AND D"), Operation::AND, 1, 4, None),
        OpCode::new(0xA3, String::from("AND E"), Operation::AND, 1, 4, None),
        OpCode::new(0xA4, String::from("AND H"), Operation::AND, 1, 4, None),
        OpCode::new(0xA5, String::from("AND L"), Operation::AND, 1, 4, None),
        OpCode::new(0xA6, String::from("AND (HL)"), Operation::AND, 1, 8, None),
        OpCode::new(0xA7, String::from("AND A"), Operation::AND, 1, 4, None),
        OpCode::new(0xA8, String::from("XOR B"), Operation::XOR, 1, 4, None),
        OpCode::new(0xA9, String::from("XOR C"), Operation::XOR, 1, 4, None),
        OpCode::new(0xAA, String::from("XOR D"), Operation::XOR, 1, 4, None),
        OpCode::new(0xAB, String::from("XOR E"), Operation::XOR, 1, 4, None),
        OpCode::new(0xAC, String::from("XOR H"), Operation::XOR, 1, 4, None),
        OpCode::new(0xAD, String::from("XOR L"), Operation::XOR, 1, 4, None),
        OpCode::new(0xAE, String::from("XOR (HL)"), Operation::XOR, 1, 8, None),
        OpCode::new(0xAF, String::from("XOR A"), Operation::XOR, 1, 4, None),

        OpCode::new(0xB0, String::from("OR B"), Operation::OR, 1, 4, None),
        OpCode::new(0xB1, String::from("OR C"), Operation::OR, 1, 4, None),
        OpCode::new(0xB2, String::from("OR D"), Operation::OR, 1, 4, None),
        OpCode::new(0xB3, String::from("OR E"), Operation::OR, 1, 4, None),
        OpCode::new(0xB4, String::from("OR H"), Operation::OR, 1, 4, None),
        OpCode::new(0xB5, String::from("OR L"), Operation::OR, 1, 4, None),
        OpCode::new(0xB6, String::from("OR (HL)"), Operation::OR, 1, 8, None),
        OpCode::new(0xB7, String::from("OR A"), Operation::OR, 1, 4, None),
        OpCode::new(0xB8, String::from("CP B"), Operation::CP, 1, 4, None),
        OpCode::new(0xB9, String::from("CP C"), Operation::CP, 1, 4, None),
        OpCode::new(0xBA, String::from("CP D"), Operation::CP, 1, 4, None),
        OpCode::new(0xBB, String::from("CP E"), Operation::CP, 1, 4, None),
        OpCode::new(0xBC, String::from("CP H"), Operation::CP, 1, 4, None),
        OpCode::new(0xBD, String::from("CP L"), Operation::CP, 1, 4, None),
        OpCode::new(0xBE, String::from("CP (HL)"), Operation::CP, 1, 8, None),
        OpCode::new(0xBF, String::from("CP A"), Operation::CP, 1, 4, None),

        OpCode::new(0xC0, String::from("RET NZ"), Operation::RET, 1, 20, Some(8)),
        OpCode::new(0xC1, String::from("POP BC"), Operation::POP, 1, 12, None),
        OpCode::new(0xC2, String::from("JP NZ, a16"), Operation::JP, 3, 16, Some(12)),
        OpCode::new(0xC3, String::from("JP a16"), Operation::JP, 3, 16, None),
        OpCode::new(0xC4, String::from("CALL NZ, a16"), Operation::CALL, 3, 24, Some(12)),
        OpCode::new(0xC5, String::from("PUSH BC"), Operation::PUSH, 1, 16, None),
        OpCode::new(0xC6, String::from("ADD A, d8"), Operation::ADD, 2, 8, None),
        OpCode::new(0xC7, String::from("RST 00H"), Operation::RST, 1, 16, None),
        OpCode::new(0xC8, String::from("RET Z"), Operation::RET, 1, 20, Some(8)),
        OpCode::new(0xC9, String::from("RET"), Operation::RET, 1, 16, None),
        OpCode::new(0xCA, String::from("JP Z a16"), Operation::JP, 3, 16, Some(12)),
        OpCode::new(0xCB, String::from("PREFIX"), Operation::PREFIX, 1, 0, None),
        OpCode::new(0xCC, String::from("CALL Z, a16"), Operation::CALL, 3, 24, Some(12)),
        OpCode::new(0xCD, String::from("CALL a16"), Operation::CALL, 3, 24, None),
        OpCode::new(0xCE, String::from("ADC A, d8"), Operation::ADC, 2, 8, None),
        OpCode::new(0xCF, String::from("RST 08H"), Operation::RST, 1, 16, None),

        OpCode::new(0xD0, String::from("RET NC"), Operation::RET, 1, 20, Some(8)),
        OpCode::new(0xD1, String::from("POP DE"), Operation::POP, 1, 12, None),
        OpCode::new(0xD2, String::from("JP NC, a16"), Operation::JP, 3, 16, Some(12)),
        // OpCode::new(0xD3, Operation::JP, 3, 16, None),
        OpCode::new(0xD4, String::from("CALL NC, a16"), Operation::CALL, 3, 24, Some(12)),
        OpCode::new(0xD5, String::from("PUSH DE"), Operation::PUSH, 1, 16, None),
        OpCode::new(0xD6, String::from("SUB d8"), Operation::SUB, 2, 8, None),
        OpCode::new(0xD7, String::from("RST 10H"), Operation::RST, 1, 16, None),
        OpCode::new(0xD8, String::from("RET C"), Operation::RET, 1, 20, Some(8)),
        OpCode::new(0xD9, String::from("RETI"), Operation::RETI, 1, 16, None),
        OpCode::new(0xDA, String::from("JP C, a16"), Operation::JP, 3, 16, Some(12)),
        // OpCode::new(0xDB, Operation::PREFIX, 1, 4, None),
        OpCode::new(0xDC, String::from("CALL C, a16"), Operation::CALL, 3, 24, Some(12)),
        // OpCode::new(0xDD, Operation::CALL, 3, 24, None),
        OpCode::new(0xDE, String::from("SBC A, d8"), Operation::SBC, 2, 8, None),
        OpCode::new(0xDF, String::from("RST 18H"), Operation::RST, 1, 16, None),

        OpCode::new(0xE0, String::from("LDH (a8), A"), Operation::LDH, 2, 12, None),
        OpCode::new(0xE1, String::from("POP HL"), Operation::POP, 1, 12, None),
        OpCode::new(0xE2, String::from("LD (C), A"), Operation::LD, 1, 8, None),
        // OpCode::new(0xE3, Operation::JP, 3, 16, None),
        // OpCode::new(0xE4, Operation::CALL, 3, 24, 12),
        OpCode::new(0xE5, String::from("PUSH HL"), Operation::PUSH, 1, 16, None),
        OpCode::new(0xE6, String::from("AND d8"), Operation::AND, 2, 8, None),
        OpCode::new(0xE7, String::from("RST 20H"), Operation::RST, 1, 16, None),
        OpCode::new(0xE8, String::from("ADD SP, r8"), Operation::ADD_16_BIT, 2, 16, None),
        OpCode::new(0xE9, String::from("JP HL"), Operation::JP, 1, 4, None),
        OpCode::new(0xEA, String::from("LD (a16), A"), Operation::LD, 3, 16, None),
        // OpCode::new(0xEB, Operation::PREFIX, 1, 4, None),
        // OpCode::new(0xEC, Operation::CALL, 3, 24, 12),
        // OpCode::new(0xED, Operation::CALL, 3, 24, None),
        OpCode::new(0xEE, String::from("XOR d8"), Operation::XOR, 2, 8, None),
        OpCode::new(0xEF, String::from("RST 28H"), Operation::RST, 1, 16, None),

        OpCode::new(0xF0, String::from("LDH A, (d8)"), Operation::LDH, 2, 12, None),
        OpCode::new(0xF1, String::from("POP AF"), Operation::POP, 1, 12, None),
        OpCode::new(0xF2, String::from("LD A, (C)"), Operation::LD, 1, 8, None),
        OpCode::new(0xF3, String::from("DI"), Operation::DI, 1, 4, None),
        // OpCode::new(0xF4, Operation::CALL, 3, 24, 12),
        OpCode::new(0xF5, String::from("PUSH AF"), Operation::PUSH, 1, 16, None),
        OpCode::new(0xF6, String::from("OR d8"), Operation::OR, 2, 8, None),
        OpCode::new(0xF7, String::from("RST 30H"), Operation::RST, 1, 16, None),
        OpCode::new(0xF8, String::from("LD HL, SP + r8"), Operation::LD, 2, 12, None),
        OpCode::new(0xF9, String::from("LD SP, HL"), Operation::LD, 1, 8, None),
        OpCode::new(0xFA, String::from("LD A, (a16)"), Operation::LD, 3, 16, None),
        OpCode::new(0xFB, String::from("EI"), Operation::EI, 1, 4, None),
        // OpCode::new(0xFC, Operation::CALL, 3, 24, 12),
        // OpCode::new(0xFD, Operation::CALL, 3, 24, None),
        OpCode::new(0xFE, String::from("CP d8"), Operation::CP, 2, 8, None),
        OpCode::new(0xFF, String::from("RST 38H"), Operation::RST, 1, 16, None),
    ];

    pub static ref CPU_PREFIX_OP_CODES: Vec<OpCode> = vec![
        OpCode::new(0x00, String::from("RLC B"), Operation::RLC, 2, 8, None),
        OpCode::new(0x01, String::from("RLC C"), Operation::RLC, 2, 8, None),
        OpCode::new(0x02, String::from("RLC D"), Operation::RLC, 2, 8, None),
        OpCode::new(0x03, String::from("RLC E"), Operation::RLC, 2, 8, None),
        OpCode::new(0x04, String::from("RLC H"), Operation::RLC, 2, 8, None),
        OpCode::new(0x05, String::from("RLC L"), Operation::RLC, 2, 8, None),
        OpCode::new(0x06, String::from("RLC (HL)"), Operation::RLC, 2, 16, None),
        OpCode::new(0x07, String::from("RLC A"), Operation::RLC, 2, 8, None),
        OpCode::new(0x08, String::from("RRC B"), Operation::RRC, 2, 8, None),
        OpCode::new(0x09, String::from("RRC C"), Operation::RRC, 2, 8, None),
        OpCode::new(0x0A, String::from("RRC D"), Operation::RRC, 2, 8, None),
        OpCode::new(0x0B, String::from("RRC E"), Operation::RRC, 2, 8, None),
        OpCode::new(0x0C, String::from("RRC H"), Operation::RRC, 2, 8, None),
        OpCode::new(0x0D, String::from("RRC L"), Operation::RRC, 2, 8, None),
        OpCode::new(0x0E, String::from("RRC (HL)"), Operation::RRC, 2, 16, None),
        OpCode::new(0x0F, String::from("RRC A"), Operation::RRC, 2, 8, None),

        OpCode::new(0x10, String::from("RL B"), Operation::RL, 2, 8, None),
        OpCode::new(0x11, String::from("RL C"), Operation::RL, 2, 8, None),
        OpCode::new(0x12, String::from("RL D"), Operation::RL, 2, 8, None),
        OpCode::new(0x13, String::from("RL E"), Operation::RL, 2, 8, None),
        OpCode::new(0x14, String::from("RL H"), Operation::RL, 2, 8, None),
        OpCode::new(0x15, String::from("RL L"), Operation::RL, 2, 8, None),
        OpCode::new(0x16, String::from("RL (HL)"), Operation::RL, 2, 16, None),
        OpCode::new(0x17, String::from("RL A"), Operation::RL, 2, 8, None),
        OpCode::new(0x18, String::from("RR B"), Operation::RR, 2, 8, None),
        OpCode::new(0x19, String::from("RR C"), Operation::RR, 2, 8, None),
        OpCode::new(0x1A, String::from("RR D"), Operation::RR, 2, 8, None),
        OpCode::new(0x1B, String::from("RR E"), Operation::RR, 2, 8, None),
        OpCode::new(0x1C, String::from("RR H"), Operation::RR, 2, 8, None),
        OpCode::new(0x1D, String::from("RR L"), Operation::RR, 2, 8, None),
        OpCode::new(0x1E, String::from("RR (HL)"), Operation::RR, 2, 16, None),
        OpCode::new(0x1F, String::from("RR A"), Operation::RR, 2, 8, None),

        OpCode::new(0x20, String::from("SLA B"), Operation::SLA, 2, 8, None),
        OpCode::new(0x21, String::from("SLA C"), Operation::SLA, 2, 8, None),
        OpCode::new(0x22, String::from("SLA D"), Operation::SLA, 2, 8, None),
        OpCode::new(0x23, String::from("SLA E"), Operation::SLA, 2, 8, None),
        OpCode::new(0x24, String::from("SLA H"), Operation::SLA, 2, 8, None),
        OpCode::new(0x25, String::from("SLA L"), Operation::SLA, 2, 8, None),
        OpCode::new(0x26, String::from("SLA (HL)"), Operation::SLA, 2, 16, None),
        OpCode::new(0x27, String::from("SLA A"), Operation::SLA, 2, 8, None),
        OpCode::new(0x28, String::from("SRA B"), Operation::SRA, 2, 8, None),
        OpCode::new(0x29, String::from("SRA C"), Operation::SRA, 2, 8, None),
        OpCode::new(0x2A, String::from("SRA D"), Operation::SRA, 2, 8, None),
        OpCode::new(0x2B, String::from("SRA E"), Operation::SRA, 2, 8, None),
        OpCode::new(0x2C, String::from("SRA H"), Operation::SRA, 2, 8, None),
        OpCode::new(0x2D, String::from("SRA L"), Operation::SRA, 2, 8, None),
        OpCode::new(0x2E, String::from("SRA (HL)"), Operation::SRA, 2, 16, None),
        OpCode::new(0x2F, String::from("SRA A"), Operation::SRA, 2, 8, None),

        OpCode::new(0x30, String::from("SWAP B"), Operation::SWAP, 2, 8, None),
        OpCode::new(0x31, String::from("SWAP C"), Operation::SWAP, 2, 8, None),
        OpCode::new(0x32, String::from("SWAP D"), Operation::SWAP, 2, 8, None),
        OpCode::new(0x33, String::from("SWAP E"), Operation::SWAP, 2, 8, None),
        OpCode::new(0x34, String::from("SWAP H"), Operation::SWAP, 2, 8, None),
        OpCode::new(0x35, String::from("SWAP L"), Operation::SWAP, 2, 8, None),
        OpCode::new(0x36, String::from("SWAP (HL)"), Operation::SWAP, 2, 16, None),
        OpCode::new(0x37, String::from("SWAP A"), Operation::SWAP, 2, 8, None),
        OpCode::new(0x38, String::from("SRL B"), Operation::SRL, 2, 8, None),
        OpCode::new(0x39, String::from("SRL C"), Operation::SRL, 2, 8, None),
        OpCode::new(0x3A, String::from("SRL D"), Operation::SRL, 2, 8, None),
        OpCode::new(0x3B, String::from("SRL E"), Operation::SRL, 2, 8, None),
        OpCode::new(0x3C, String::from("SRL H"), Operation::SRL, 2, 8, None),
        OpCode::new(0x3D, String::from("SRL L"), Operation::SRL, 2, 8, None),
        OpCode::new(0x3E, String::from("SRL (HL)"), Operation::SRL, 2, 16, None),
        OpCode::new(0x3F, String::from("SRL A"), Operation::SRL, 2, 8, None),

        OpCode::new(0x40, String::from("BIT 0, B"), Operation::BIT, 2, 8, None),
        OpCode::new(0x41, String::from("BIT 0, C"), Operation::BIT, 2, 8, None),
        OpCode::new(0x42, String::from("BIT 0, D"), Operation::BIT, 2, 8, None),
        OpCode::new(0x43, String::from("BIT 0, E"), Operation::BIT, 2, 8, None),
        OpCode::new(0x44, String::from("BIT 0, H"), Operation::BIT, 2, 8, None),
        OpCode::new(0x45, String::from("BIT 0, L"), Operation::BIT, 2, 8, None),
        OpCode::new(0x46, String::from("BIT 0, (HL)"), Operation::BIT, 2, 12, None),
        OpCode::new(0x47, String::from("BIT 0, A"), Operation::BIT, 2, 8, None),
        OpCode::new(0x48, String::from("BIT 1, B"), Operation::BIT, 2, 8, None),
        OpCode::new(0x49, String::from("BIT 1, C"), Operation::BIT, 2, 8, None),
        OpCode::new(0x4A, String::from("BIT 1, D"), Operation::BIT, 2, 8, None),
        OpCode::new(0x4B, String::from("BIT 1, E"), Operation::BIT, 2, 8, None),
        OpCode::new(0x4C, String::from("BIT 1, H"), Operation::BIT, 2, 8, None),
        OpCode::new(0x4D, String::from("BIT 1, L"), Operation::BIT, 2, 8, None),
        OpCode::new(0x4E, String::from("BIT 1, (HL)"), Operation::BIT, 2, 12, None),
        OpCode::new(0x4F, String::from("BIT 1, A"), Operation::BIT, 2, 8, None),

        OpCode::new(0x50, String::from("BIT 2, B"), Operation::BIT, 2, 8, None),
        OpCode::new(0x51, String::from("BIT 2, C"), Operation::BIT, 2, 8, None),
        OpCode::new(0x52, String::from("BIT 2, D"), Operation::BIT, 2, 8, None),
        OpCode::new(0x53, String::from("BIT 2, E"), Operation::BIT, 2, 8, None),
        OpCode::new(0x54, String::from("BIT 2, H"), Operation::BIT, 2, 8, None),
        OpCode::new(0x55, String::from("BIT 2, L"), Operation::BIT, 2, 8, None),
        OpCode::new(0x56, String::from("BIT 2, (HL)"), Operation::BIT, 2, 12, None),
        OpCode::new(0x57, String::from("BIT 2, A"), Operation::BIT, 2, 8, None),
        OpCode::new(0x58, String::from("BIT 3, B"), Operation::BIT, 2, 8, None),
        OpCode::new(0x59, String::from("BIT 3, C"), Operation::BIT, 2, 8, None),
        OpCode::new(0x5A, String::from("BIT 3, D"), Operation::BIT, 2, 8, None),
        OpCode::new(0x5B, String::from("BIT 3, E"), Operation::BIT, 2, 8, None),
        OpCode::new(0x5C, String::from("BIT 3, H"), Operation::BIT, 2, 8, None),
        OpCode::new(0x5D, String::from("BIT 3, L"), Operation::BIT, 2, 8, None),
        OpCode::new(0x5E, String::from("BIT 3, (HL)"), Operation::BIT, 2, 12, None),
        OpCode::new(0x5F, String::from("BIT 3, A"), Operation::BIT, 2, 8, None),

        OpCode::new(0x60, String::from("BIT 4, B"), Operation::BIT, 2, 8, None),
        OpCode::new(0x61, String::from("BIT 4, C"), Operation::BIT, 2, 8, None),
        OpCode::new(0x62, String::from("BIT 4, D"), Operation::BIT, 2, 8, None),
        OpCode::new(0x63, String::from("BIT 4, E"), Operation::BIT, 2, 8, None),
        OpCode::new(0x64, String::from("BIT 4, H"), Operation::BIT, 2, 8, None),
        OpCode::new(0x65, String::from("BIT 4, L"), Operation::BIT, 2, 8, None),
        OpCode::new(0x66, String::from("BIT 4, (HL)"), Operation::BIT, 2, 12, None),
        OpCode::new(0x67, String::from("BIT 4, A"), Operation::BIT, 2, 8, None),
        OpCode::new(0x68, String::from("BIT 5, B"), Operation::BIT, 2, 8, None),
        OpCode::new(0x69, String::from("BIT 5, C"), Operation::BIT, 2, 8, None),
        OpCode::new(0x6A, String::from("BIT 5, D"), Operation::BIT, 2, 8, None),
        OpCode::new(0x6B, String::from("BIT 5, E"), Operation::BIT, 2, 8, None),
        OpCode::new(0x6C, String::from("BIT 5, H"), Operation::BIT, 2, 8, None),
        OpCode::new(0x6D, String::from("BIT 5, L"), Operation::BIT, 2, 8, None),
        OpCode::new(0x6E, String::from("BIT 5, (HL)"), Operation::BIT, 2, 12, None),
        OpCode::new(0x6F, String::from("BIT 5, A"), Operation::BIT, 2, 8, None),

        OpCode::new(0x70, String::from("BIT 6, B"), Operation::BIT, 2, 8, None),
        OpCode::new(0x71, String::from("BIT 6, C"), Operation::BIT, 2, 8, None),
        OpCode::new(0x72, String::from("BIT 6, D"), Operation::BIT, 2, 8, None),
        OpCode::new(0x73, String::from("BIT 6, E"), Operation::BIT, 2, 8, None),
        OpCode::new(0x74, String::from("BIT 6, H"), Operation::BIT, 2, 8, None),
        OpCode::new(0x75, String::from("BIT 6, L"), Operation::BIT, 2, 8, None),
        OpCode::new(0x76, String::from("BIT 6, (HL)"), Operation::BIT, 2, 12, None),
        OpCode::new(0x77, String::from("BIT 6, A"), Operation::BIT, 2, 8, None),
        OpCode::new(0x78, String::from("BIT 7, B"), Operation::BIT, 2, 8, None),
        OpCode::new(0x79, String::from("BIT 7, C"), Operation::BIT, 2, 8, None),
        OpCode::new(0x7A, String::from("BIT 7, D"), Operation::BIT, 2, 8, None),
        OpCode::new(0x7B, String::from("BIT 7, E"), Operation::BIT, 2, 8, None),
        OpCode::new(0x7C, String::from("BIT 7, H"), Operation::BIT, 2, 8, None),
        OpCode::new(0x7D, String::from("BIT 7, L"), Operation::BIT, 2, 8, None),
        OpCode::new(0x7E, String::from("BIT 7, (HL)"), Operation::BIT, 2, 12, None),
        OpCode::new(0x7F, String::from("BIT 7, A"), Operation::BIT, 2, 8, None),

        OpCode::new(0x80, String::from("RES 0, B"), Operation::RES, 2, 8, None),
        OpCode::new(0x81, String::from("RES 0, C"), Operation::RES, 2, 8, None),
        OpCode::new(0x82, String::from("RES 0, D"), Operation::RES, 2, 8, None),
        OpCode::new(0x83, String::from("RES 0, E"), Operation::RES, 2, 8, None),
        OpCode::new(0x84, String::from("RES 0, H"), Operation::RES, 2, 8, None),
        OpCode::new(0x85, String::from("RES 0, L"), Operation::RES, 2, 8, None),
        OpCode::new(0x86, String::from("RES 0, (HL)"), Operation::RES, 2, 16, None),
        OpCode::new(0x87, String::from("RES 0, A"), Operation::RES, 2, 8, None),
        OpCode::new(0x88, String::from("RES 1, B"), Operation::RES, 2, 8, None),
        OpCode::new(0x89, String::from("RES 1, C"), Operation::RES, 2, 8, None),
        OpCode::new(0x8A, String::from("RES 1, D"), Operation::RES, 2, 8, None),
        OpCode::new(0x8B, String::from("RES 1, E"), Operation::RES, 2, 8, None),
        OpCode::new(0x8C, String::from("RES 1, H"), Operation::RES, 2, 8, None),
        OpCode::new(0x8D, String::from("RES 1, L"), Operation::RES, 2, 8, None),
        OpCode::new(0x8E, String::from("RES 1, (HL)"), Operation::RES, 2, 16, None),
        OpCode::new(0x8F, String::from("RES 1, A"), Operation::RES, 2, 8, None),

        OpCode::new(0x90, String::from("RES 2, B"), Operation::RES, 2, 8, None),
        OpCode::new(0x91, String::from("RES 2, C"), Operation::RES, 2, 8, None),
        OpCode::new(0x92, String::from("RES 2, D"), Operation::RES, 2, 8, None),
        OpCode::new(0x93, String::from("RES 2, E"), Operation::RES, 2, 8, None),
        OpCode::new(0x94, String::from("RES 2, H"), Operation::RES, 2, 8, None),
        OpCode::new(0x95, String::from("RES 2, L"), Operation::RES, 2, 8, None),
        OpCode::new(0x96, String::from("RES 2, (HL)"), Operation::RES, 2, 16, None),
        OpCode::new(0x97, String::from("RES 2, A"), Operation::RES, 2, 8, None),
        OpCode::new(0x98, String::from("RES 3, B"), Operation::RES, 2, 8, None),
        OpCode::new(0x99, String::from("RES 3, C"), Operation::RES, 2, 8, None),
        OpCode::new(0x9A, String::from("RES 3, D"), Operation::RES, 2, 8, None),
        OpCode::new(0x9B, String::from("RES 3, E"), Operation::RES, 2, 8, None),
        OpCode::new(0x9C, String::from("RES 3, H"), Operation::RES, 2, 8, None),
        OpCode::new(0x9D, String::from("RES 3, L"), Operation::RES, 2, 8, None),
        OpCode::new(0x9E, String::from("RES 3, (HL)"), Operation::RES, 2, 16, None),
        OpCode::new(0x9F, String::from("RES 3, A"), Operation::RES, 2, 8, None),

        OpCode::new(0xA0, String::from("RES 4, B"), Operation::RES, 2, 8, None),
        OpCode::new(0xA1, String::from("RES 4, C"), Operation::RES, 2, 8, None),
        OpCode::new(0xA2, String::from("RES 4, D"), Operation::RES, 2, 8, None),
        OpCode::new(0xA3, String::from("RES 4, E"), Operation::RES, 2, 8, None),
        OpCode::new(0xA4, String::from("RES 4, H"), Operation::RES, 2, 8, None),
        OpCode::new(0xA5, String::from("RES 4, L"), Operation::RES, 2, 8, None),
        OpCode::new(0xA6, String::from("RES 4, (HL)"), Operation::RES, 2, 16, None),
        OpCode::new(0xA7, String::from("RES 4, A"), Operation::RES, 2, 8, None),
        OpCode::new(0xA8, String::from("RES 5, B"), Operation::RES, 2, 8, None),
        OpCode::new(0xA9, String::from("RES 5, C"), Operation::RES, 2, 8, None),
        OpCode::new(0xAA, String::from("RES 5, D"), Operation::RES, 2, 8, None),
        OpCode::new(0xAB, String::from("RES 5, E"), Operation::RES, 2, 8, None),
        OpCode::new(0xAC, String::from("RES 5, H"), Operation::RES, 2, 8, None),
        OpCode::new(0xAD, String::from("RES 5, L"), Operation::RES, 2, 8, None),
        OpCode::new(0xAE, String::from("RES 5, (HL)"), Operation::RES, 2, 16, None),
        OpCode::new(0xAF, String::from("RES 5, A"), Operation::RES, 2, 8, None),

        OpCode::new(0xB0, String::from("RES 6, B"), Operation::RES, 2, 8, None),
        OpCode::new(0xB1, String::from("RES 6, C"), Operation::RES, 2, 8, None),
        OpCode::new(0xB2, String::from("RES 6, D"), Operation::RES, 2, 8, None),
        OpCode::new(0xB3, String::from("RES 6, E"), Operation::RES, 2, 8, None),
        OpCode::new(0xB4, String::from("RES 6, H"), Operation::RES, 2, 8, None),
        OpCode::new(0xB5, String::from("RES 6, L"), Operation::RES, 2, 8, None),
        OpCode::new(0xB6, String::from("RES 6, (HL)"), Operation::RES, 2, 16, None),
        OpCode::new(0xB7, String::from("RES 6, A"), Operation::RES, 2, 8, None),
        OpCode::new(0xB8, String::from("RES 7, B"), Operation::RES, 2, 8, None),
        OpCode::new(0xB9, String::from("RES 7, C"), Operation::RES, 2, 8, None),
        OpCode::new(0xBA, String::from("RES 7, D"), Operation::RES, 2, 8, None),
        OpCode::new(0xBB, String::from("RES 7, E"), Operation::RES, 2, 8, None),
        OpCode::new(0xBC, String::from("RES 7, H"), Operation::RES, 2, 8, None),
        OpCode::new(0xBD, String::from("RES 7, L"), Operation::RES, 2, 8, None),
        OpCode::new(0xBE, String::from("RES 7, (HL)"), Operation::RES, 2, 16, None),
        OpCode::new(0xBF, String::from("RES 7, A"), Operation::RES, 2, 8, None),

        OpCode::new(0xC0, String::from("SET 0, B"), Operation::SET, 2, 8, None),
        OpCode::new(0xC1, String::from("SET 0, C"), Operation::SET, 2, 8, None),
        OpCode::new(0xC2, String::from("SET 0, D"), Operation::SET, 2, 8, None),
        OpCode::new(0xC3, String::from("SET 0, E"), Operation::SET, 2, 8, None),
        OpCode::new(0xC4, String::from("SET 0, H"), Operation::SET, 2, 8, None),
        OpCode::new(0xC5, String::from("SET 0, L"), Operation::SET, 2, 8, None),
        OpCode::new(0xC6, String::from("SET 0, (HL)"), Operation::SET, 2, 16, None),
        OpCode::new(0xC7, String::from("SET 0, A"), Operation::SET, 2, 8, None),
        OpCode::new(0xC8, String::from("SET 1, B"), Operation::SET, 2, 8, None),
        OpCode::new(0xC9, String::from("SET 1, C"), Operation::SET, 2, 8, None),
        OpCode::new(0xCA, String::from("SET 1, D"), Operation::SET, 2, 8, None),
        OpCode::new(0xCB, String::from("SET 1, E"), Operation::SET, 2, 8, None),
        OpCode::new(0xCC, String::from("SET 1, H"), Operation::SET, 2, 8, None),
        OpCode::new(0xCD, String::from("SET 1, L"), Operation::SET, 2, 8, None),
        OpCode::new(0xCE, String::from("SET 1, (HL)"), Operation::SET, 2, 16, None),
        OpCode::new(0xCF, String::from("SET 1, A"), Operation::SET, 2, 8, None),

        OpCode::new(0xD0, String::from("SET 2, B"), Operation::SET, 2, 8, None),
        OpCode::new(0xD1, String::from("SET 2, C"), Operation::SET, 2, 8, None),
        OpCode::new(0xD2, String::from("SET 2, D"), Operation::SET, 2, 8, None),
        OpCode::new(0xD3, String::from("SET 2, E"), Operation::SET, 2, 8, None),
        OpCode::new(0xD4, String::from("SET 2, H"), Operation::SET, 2, 8, None),
        OpCode::new(0xD5, String::from("SET 2, L"), Operation::SET, 2, 8, None),
        OpCode::new(0xD6, String::from("SET 2, (HL)"), Operation::SET, 2, 16, None),
        OpCode::new(0xD7, String::from("SET 2, A"), Operation::SET, 2, 8, None),
        OpCode::new(0xD8, String::from("SET 3, B"), Operation::SET, 2, 8, None),
        OpCode::new(0xD9, String::from("SET 3, C"), Operation::SET, 2, 8, None),
        OpCode::new(0xDA, String::from("SET 3, D"), Operation::SET, 2, 8, None),
        OpCode::new(0xDB, String::from("SET 3, E"), Operation::SET, 2, 8, None),
        OpCode::new(0xDC, String::from("SET 3, H"), Operation::SET, 2, 8, None),
        OpCode::new(0xDD, String::from("SET 3, L"), Operation::SET, 2, 8, None),
        OpCode::new(0xDE, String::from("SET 3, (HL)"), Operation::SET, 2, 16, None),
        OpCode::new(0xDF, String::from("SET 3, A"), Operation::SET, 2, 8, None),

        OpCode::new(0xE0, String::from("SET 4, B"), Operation::SET, 2, 8, None),
        OpCode::new(0xE1, String::from("SET 4, C"), Operation::SET, 2, 8, None),
        OpCode::new(0xE2, String::from("SET 4, D"), Operation::SET, 2, 8, None),
        OpCode::new(0xE3, String::from("SET 4, E"), Operation::SET, 2, 8, None),
        OpCode::new(0xE4, String::from("SET 4, H"), Operation::SET, 2, 8, None),
        OpCode::new(0xE5, String::from("SET 4, L"), Operation::SET, 2, 8, None),
        OpCode::new(0xE6, String::from("SET 4, (HL)"), Operation::SET, 2, 16, None),
        OpCode::new(0xE7, String::from("SET 4, A"), Operation::SET, 2, 8, None),
        OpCode::new(0xE8, String::from("SET 5, B"), Operation::SET, 2, 8, None),
        OpCode::new(0xE9, String::from("SET 5, C"), Operation::SET, 2, 8, None),
        OpCode::new(0xEA, String::from("SET 5, D"), Operation::SET, 2, 8, None),
        OpCode::new(0xEB, String::from("SET 5, E"), Operation::SET, 2, 8, None),
        OpCode::new(0xEC, String::from("SET 5, H"), Operation::SET, 2, 8, None),
        OpCode::new(0xED, String::from("SET 5, L"), Operation::SET, 2, 8, None),
        OpCode::new(0xEE, String::from("SET 5, (HL)"), Operation::SET, 2, 16, None),
        OpCode::new(0xEF, String::from("SET 5, A"), Operation::SET, 2, 8, None),

        OpCode::new(0xF0, String::from("SET 6, B"), Operation::SET, 2, 8, None),
        OpCode::new(0xF1, String::from("SET 6, C"), Operation::SET, 2, 8, None),
        OpCode::new(0xF2, String::from("SET 6, D"), Operation::SET, 2, 8, None),
        OpCode::new(0xF3, String::from("SET 6, E"), Operation::SET, 2, 8, None),
        OpCode::new(0xF4, String::from("SET 6, H"), Operation::SET, 2, 8, None),
        OpCode::new(0xF5, String::from("SET 6, L"), Operation::SET, 2, 8, None),
        OpCode::new(0xF6, String::from("SET 6, (HL)"), Operation::SET, 2, 16, None),
        OpCode::new(0xF7, String::from("SET 6, A"), Operation::SET, 2, 8, None),
        OpCode::new(0xF8, String::from("SET 7, B"), Operation::SET, 2, 8, None),
        OpCode::new(0xF9, String::from("SET 7, C"), Operation::SET, 2, 8, None),
        OpCode::new(0xFA, String::from("SET 7, D"), Operation::SET, 2, 8, None),
        OpCode::new(0xFB, String::from("SET 7, E"), Operation::SET, 2, 8, None),
        OpCode::new(0xFC, String::from("SET 7, H"), Operation::SET, 2, 8, None),
        OpCode::new(0xFD, String::from("SET 7, L"), Operation::SET, 2, 8, None),
        OpCode::new(0xFE, String::from("SET 7, (HL)"), Operation::SET, 2, 16, None),
        OpCode::new(0xFF, String::from("SET 7, A"), Operation::SET, 2, 8, None),
    ];

    pub static ref OPCODE_MAP: HashMap<u8, &'static OpCode> = {
        let mut map = HashMap::new();
        for cpuop in &*CPU_OP_CODES {
            map.insert(cpuop.code, cpuop);
        }
        map
    };

    pub static ref PREFIX_OPCODE_MAP: HashMap<u8, &'static OpCode> = {
        let mut map = HashMap::new();
        for cpuop in &*CPU_PREFIX_OP_CODES {
            map.insert(cpuop.code, cpuop);
        }
        map
    };
}